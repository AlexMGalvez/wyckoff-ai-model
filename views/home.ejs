<html>
  <head>
    <title>WyckoffAI</title>
    <!-- used to supress favicon error -->
    <link rel="shortcut icon" href="/sdfse" />
    <script src="https://cdn.plot.ly/plotly-2.12.1.min.js"></script>
  </head>
  <body>
    <h2>Wyckoff Ai Model</h2>
    <div id="lossesPlot"></div>

    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/hyperparameters@latest/dist/hyperparameters.min.js"> </script>
    <script src="static/model.js"></script>

    <script>
      const run = async () => {
        let data = <%- JSON.stringify(data) %>;
        data = dataReducer(data, 500); // remove patterns from data with over 500 time points
        shuffle(data);
        const trainingData = data.slice(0, -6);
        const testingData = data.slice(-6); 
        const padMax = Math.max(...data.map((el) => el.dates.length));

        console.log("Data size: ", data.length);
        console.log("Pad max: ", padMax);
        // const [model, history] = await trainModel(trainingData, padMax);
        // //console.log('numTensors after training: ' + tf.memory().numTensors);
        // const [expectedResults, modelOut] = makePredictions(testingData, model, padMax);
        // console.log("Testing data: ");
        // console.log(testingData);
        // console.log("Expected results: ");
        // console.log(expectedResults);
        // console.log("Testing results: ");
        // console.log(modelOut.arraySync());

        // plotLosses(history);
        
        // saveModel(model);
      }

      const dataReducer = (array, max) => {
        array.sort((a,b) => b.f1.length - a.f1.length)
        while (array[0].f1.length > 500) {
          array.shift();
        }
        return array;
      }

      const shuffle = (array) => {
        let currentIndex = array.length,  randomIndex;

        while (currentIndex != 0) {
          randomIndex = Math.floor(Math.random() * currentIndex);
          currentIndex--;
          [array[currentIndex], array[randomIndex]] = [
            array[randomIndex], array[currentIndex]];
        }
        return array;
      }

      const plotLosses = (history) => {
        let valLoss = {
          y: history.history.val_loss,
          type: "scatter",
          mode: "lines",
          name: "Validation Loss"
        };

        let trainingloss = {
          y: history.history.loss,
          type: "scatter",
          mode: "lines",
          name: "Training Loss"
        };

        let layout = {
          title: "Training and Validation Loss",
          xaxis: {
            title: "Epochs",
            showgrid: false,
            zeroline: false
          },
          yaxis: {
            title: "Loss",
            showline: false
          }
        };

        let plotData = [valLoss, trainingloss];

        Plotly.newPlot("lossesPlot", plotData, layout);
      }

      run();
    </script>
  </body>
</html>

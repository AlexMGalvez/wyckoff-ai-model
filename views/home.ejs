<html>
  <head>
    <title>WyckoffAI</title>
    <!-- used to supress favicon error -->
    <link rel="shortcut icon" href="/sdfse" />
  </head>
  <body>
    <h2>Wyckoff Ai Model</h2>

    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js"></script>
    <script src="static/model.js"></script>

    <script>
      const run = async () => {
        let data = <%- JSON.stringify(data) %>;
        console.log(data);
        //shuffle(data);
        

        // const trainingData = data.slice(0, -2);
        // const testingData = data.slice(-4);
        // const patternClassifications = ["No accumulation", "Phase C", "Phase D", "Phase B"];
        // //const padMax = Math.max(...data.map((el) => el.x.length));

        // const padMax = 150;
        // const model = await trainModel(trainingData, padMax);
        // const [expectedResults, modelOut] = makePredictions(testingData, model, padMax);
        // console.log("Testing data: ");
        // console.log(testingData);
        // console.log("Expected results: ");
        // console.log(expectedResults);
        // console.log("Testing results: ");
        // console.log(modelOut.arraySync());

        // for (let i = 0; i <  modelOut.arraySync().length; i++) {
        //   console.log("Pattern classification: " + patternClassifications[modelOut.argMax(1).arraySync()[i]]);
        // }
        

        // for (let i = 0; i < model.layers.length; i++) {
        //   console.log(model.layers[i].trainableWeights)
        // }
        //model.layers[3].getWeights()[0].print();
        //model.layers[3].getWeights()[1].print();
      }

      const shuffle = (array) => {
        let currentIndex = array.length,  randomIndex;

        while (currentIndex != 0) {
          randomIndex = Math.floor(Math.random() * currentIndex);
          currentIndex--;
          [array[currentIndex], array[randomIndex]] = [
            array[randomIndex], array[currentIndex]];
        }
        return array;
      }

      run();
    </script>
  </body>
</html>
